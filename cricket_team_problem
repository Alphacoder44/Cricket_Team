const express = require("express");
const path = require("path");

const { open } = require("sqlite");
const sqlite3 = require("sqlite3");
const app = express();
app.use(express.json());

const dbPath = path.join(__dirname, "cricketTeam");

let db = null;
const initializeDBAndSever = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    });
    app.listen(3000, () =>
      console.log("server Running at http://localhost:300/")
    );
  } catch (error) {
    console.log(`DB Error: ${error.message}`);
    process.exit(1);
  }
};

initializeDBAndSever();

const convertDbObjectToResponseObject = (dbObject) => {
  return {
    playerId: dbObject.player_Id,
    playerName: dbObject.player_Name,
    jerseyNumber: dbObject.jersey_Number,
    role: dbObject.role,
  };
};

app.get("/players/", async (request, response) => {
  const getPlayersQuery = `
    SELECT
       * 
    FROM 
     cricket_team;`;
  const playersArray = await db.all(getPlayersQuery);
  response.send(
    playersArray.map((eachPlayer) =>
      convertDbObjectToResponseObject(eachPlayer)
    )
  );
});

//get a player

app.get("/players/:playerId/", async (request, response) => {
  const { playerId } = request.params;
  const getPlayerQuery = `SELECT * FROM cricket_team WHERE player_id = ${playerID};`;

  const player = await db.get(getPlayerQuery);
  response.send(convertDbObjectToResponseObject(player));
});

//create a new player

app.post("/players/", async (request, response) => {
  const { playerName, jerseyNumber, role } = request.body;
  const addPlayerQuery = `
    INSERT INTO 
    cricket_team (player_name, jersey_name, role)
    VALUES
        (
            '${playerName}',
            ${jerseyNumber},
            '${role}'
        );`;
  const player = await db.run(addPlayerQuery);

  response.send("Player added to Team");
});

//update player

app.put("/players/:playerId/", async (request, response) => {
  const { playerId } = request.params;
  const playerDetails = request.body;
  const { playerName, jerseyNumber, role } = playerDetails;

  const updatePlayerQuery = `
      UPDATE cricket_team 
      SET 
        player_name = '${playerName}',
        jersey_name = '${jerseyNumber}',
        role = '${role}'

        WHERE player_id = ${playerID}`;
  await db.run(updatePlayerQuery);
  response.send("player Details Updated");
});

//delete book API

app.delete("/players/:playerId", async (request, response) => {
  const { playerId } = request.params;
  const deletePlayerQuery = `DELETE FROM cricket_team WHERE player_id = ${playerId}`;
  await db.run(deletePlayerQuery);
  response.send("player Removed");
});
module.exports = app;
